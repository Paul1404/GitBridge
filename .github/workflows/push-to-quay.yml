name: GitBridge Release Pipeline

on:
  push:
    branches:
      - main

permissions:
  contents: write        # needed for pushing tags, changelog commits
  issues: write          # needed for semantic-release to open issues if it fails

jobs:
  # -------------------------------
  # 1. Versioning & Release
  # -------------------------------
  version-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install semantic-release
        run: |
          npm install -g semantic-release \
            @semantic-release/git \
            @semantic-release/changelog \
            @semantic-release/github \
            @semantic-release/commit-analyzer \
            @semantic-release/release-notes-generator \
            conventional-changelog-conventionalcommits

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: semantic-release

  # -------------------------------
  # 2. Docker Build & Push
  # -------------------------------
  docker-build:
    needs: version-and-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_tag
        run: |
          tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "latest")
          echo "tag=$tag" >> $GITHUB_OUTPUT

      - name: Log in to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            quay.io/scaling4840/gitbridge:latest
            quay.io/scaling4840/gitbridge:${{ steps.get_tag.outputs.tag }}
            quay.io/scaling4840/gitbridge:sha-${{ github.sha }}

  # -------------------------------
  # 3. SBOM Generation
  # -------------------------------
  sbom:
    name: Generate SBOMs
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: Generate SBOM (CycloneDX JSON)
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: image
          image-ref: quay.io/scaling4840/gitbridge:latest
          format: cyclonedx
          output: sbom.cyclonedx.json
          exit-code: 0

      - name: Generate SBOM (SPDX JSON)
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: image
          image-ref: quay.io/scaling4840/gitbridge:latest
          format: spdx-json
          output: sbom.spdx.json
          exit-code: 0

      - name: Upload SBOMs to Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            sbom.cyclonedx.json
            sbom.spdx.json